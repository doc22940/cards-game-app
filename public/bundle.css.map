{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/routes/index.svelte",
    "../src/components/Card.svelte"
  ],
  "sourcesContent": [
    "\n\n<script>\n\timport Card from '../components/Card.svelte';\n\timport Pannel from '../components/Pannel.svelte';\n\timport cardsNames from './cards.js';\n\timport { onMount, createEventDispatcher } from 'svelte';\n\timport { boardState, defaultState, count } from '../store.js';\n\n\tconst dispatch = createEventDispatcher();\n\t\n\tfunction getRandomInt(max) {\n\t\treturn Math.floor(Math.random() * Math.floor(max));\n\t}\n\t\n\tconst fieldSizes = [16, 36, 100]\n\n\t//todo\n\tconst setups = [{\n\t\ttitle: 'small',\n\t\tsize: 16,\n\t\tfieldWidth: 440\n\t},\n\t{\n\t\ttitle: 'big',\n\t\tsize: 36,\n\t\tfieldWidth: 640\n\t},\n\t{\n\t\ttitle: 'huge',\n\t\tsize: 100,\n\t\tfieldWidth: 800\n\t}]\n\tlet selectedFieldSize = fieldSizes[0];\n\tlet isBigSize = false;\n\tlet cards;\n\n\tonMount(async () => {\n\t\trestart()\n\t});\n\n\tfunction startNewGame(event){\n\t\tselectedFieldSize = event.detail.size;\n\t\tcards = []\n\t\tsetTimeout(() => {\n\t\t\trestart()\n\t\t})\n\t}\n\n\tfunction restart(){\n\t\tisBigSize = selectedFieldSize > 20;\n\t\tboardState.update(_ => ({\n\t\t\t...defaultState,\n\t\t\tguessedItems: [],\n\t\t\tgameStart: new Date()\n\t\t}))\n\n\t\t//prepare cards\n\t\tlet start = getRandomInt(cardsNames.length)\n\t\tlet cardsGroup = cardsNames.slice(start, start + selectedFieldSize/2) \n\t\tif(cardsNames.length - start < selectedFieldSize/2) {\n\t\t\tconst leftFromFront = selectedFieldSize/2 - cardsNames.length + start\n\t\t\tcardsGroup = cardsGroup.concat(cardsNames.slice(0, leftFromFront))\n\t\t}\n\t\tcards = [...cardsGroup, ...cardsGroup].sort(() => Math.random() - 0.5);\n\t}\n\n\n\n\tfunction checkAmount() {\n\n\t\tif($boardState.openedItems.length > 1 && $boardState.openedItems[0] === $boardState.openedItems[1]){\n\t\t\t\n\t\t\tboardState.update(state => {\n\t\t\t\t const newState = {\n\t\t\t\t\tguessedItems:$boardState.guessedItems.length ? [...$boardState.guessedItems, $boardState.openedItems[1]] : [$boardState.openedItems[1]],\n\t\t\t\t\ttoRemove: null,\n\t\t\t\t\topenedItems: [],\n\t\t\t\t\tgameStart: state.gameStart\n\t\t\t\t}\n\t\t\t\treturn newState;\n\t\t\t})\n\n\t\t} else {\n\t\t\tif($boardState.openedItems.length > 1) {\n\t\t\t\t\n\t\t\t\tboardState.update(state => {\n\t\t\t\t\tconst newState = {\n\t\t\t\t\t\ttoRemove: $boardState.openedItems[0],\n\t\t\t\t\t\topenedItems: $boardState.openedItems.splice(1, 3),\n\t\t\t\t\t\tguessedItems: $boardState.guessedItems,\n\t\t\t\t\t\tgameStart: $boardState.gameStart\n\t\t\t\t\t}\n\t\t\t\t\treturn newState;\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n</script>\n\n<Pannel fieldSizes={fieldSizes} on:new={startNewGame}/>\n\n<!-- {JSON.stringify($boardState)} -->\n<section class=\"game-board\" class:sizeBig=\"{isBigSize}\">\n\t{#if cards} \n\t\t{#each cards as card}\n\t\t\t<Card symbol={`assets/logos/${card}.gif`} on:turn={checkAmount}/>\n\t\t{/each}\n\t{/if}\n</section>\n\n<style>\n.game-board {\n\twidth: 460px;\n}\n.game-board.sizeBig {\n\twidth: 660px;\n}\n</style>",
    "<div class=\"scene scene--card\">\n  <div class=\"card\" on:click={wrapCard} class:flipped=\"{front}\">\n    <div class=\"card__face card__face--front\"><img src={symbol} alt={symbol}></div>\n    <div class=\"card__face card__face--back\"title={symbol}>\n        <img src=\"assets/bg.jpg\" alt=\"bg\">\n    </div>\n  </div>\n</div>\n\n<script>\n    import { boardState } from '../store.js';\n    import { createEventDispatcher } from 'svelte';\n\tconst dispatch = createEventDispatcher();\n\n    export let symbol;\n\n    boardState.subscribe(state => {\n\n        if($boardState.guessedItems.indexOf(symbol) > -1 ) return;\n\n        if($boardState.toRemove === symbol && !front && $boardState.guessedItems.indexOf(symbol) == -1) {\n            front = !front;\n              boardState.update(state => {\n                const newState = {\n                  ...state\n                }\n                newState.toRemove = null;\n                newState.guessedItems = state.guessedItems\n                return newState\n            });\n        }\n    });\n\n    let front = true;\n    function wrapCard(){\n        \n        if($boardState.guessedItems.indexOf(symbol) > -1 ) return;\n\n        dispatch('turn', {\n            name: symbol\n            })\n\n        boardState.update(state => {\n            state.openedItems.push(symbol)\n            return {\n              ...state\n            }\n        });\n        front = !front;\n        \n    }\n</script>\n\n<style>\n\n.scene {\n  width: 100px;\n  height: 90px;\n  margin: 5px;\n  perspective: 500px;\n  display: inline-block;\n}\n\n.card {\n  width: 100%;\n  height: 100%;\n  transition: transform 1s;\n  transform-style: preserve-3d;\n  cursor: pointer;\n  position: relative;\n  border: 1px solid #ddd;\n}\n\n.card.flipped {\n  transform: rotateY(180deg);\n}\n/* .card:hover {\n  transform: scale(1.1);\n} */\n\n.card__face {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  color: white;\n  text-align: center;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n}\n\n.card__face--front {\n  background: #fff;\n}\n\n.card__face--front img {\n  user-select: none;\n}\n\n.card__face--back {\n  background: #5e5e5e;\n  transform: rotateY(180deg);\n}\n.card__face--back img {\n    width: 79px;\n    height: 70px;\n    opacity: .3;\n    margin-top: 12px;\n    user-select: none;\n}\n</style>"
  ],
  "names": [],
  "mappings": "AAiHA,WAAW,eAAC,CAAC,AACZ,KAAK,CAAE,KAAK,AACb,CAAC,AACD,WAAW,QAAQ,eAAC,CAAC,AACpB,KAAK,CAAE,KAAK,AACb,CAAC;AC/DD,MAAM,cAAC,CAAC,AACN,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CACX,WAAW,CAAE,KAAK,CAClB,OAAO,CAAE,YAAY,AACvB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,SAAS,CAAC,EAAE,CACxB,eAAe,CAAE,WAAW,CAC5B,MAAM,CAAE,OAAO,CACf,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AACxB,CAAC,AAED,KAAK,QAAQ,cAAC,CAAC,AACb,SAAS,CAAE,QAAQ,MAAM,CAAC,AAC5B,CAAC,AAKD,WAAW,cAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,MAAM,CAClB,2BAA2B,CAAE,MAAM,CACnC,mBAAmB,CAAE,MAAM,AAC7B,CAAC,AAED,kBAAkB,cAAC,CAAC,AAClB,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,gCAAkB,CAAC,GAAG,cAAC,CAAC,AACtB,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,iBAAiB,cAAC,CAAC,AACjB,UAAU,CAAE,OAAO,CACnB,SAAS,CAAE,QAAQ,MAAM,CAAC,AAC5B,CAAC,AACD,+BAAiB,CAAC,GAAG,cAAC,CAAC,AACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,EAAE,CACX,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,IAAI,AACrB,CAAC"
}